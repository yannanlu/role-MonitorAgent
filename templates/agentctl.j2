#!/bin/bash

DAEMON=org.qbroker.flow.MonitorAgent
QBDIR={{qb_dir}}
LOGDIR={{log_dir}}
ID=Agent
OWNER={{qb_user}}
JAVA={{java}}
JAVA_OPTS="{{java_opts}}"
PS=/bin/ps

CLASSPATH=\
{% for f in jar_files %}
$QBDIR/lib/{{f}}:\
{% endfor %}
$QBDIR/lib/:$CLASSPATH
export CLASSPATH

TZ=US/Eastern
export TZ

## get pids for QFlow daemon processes with string patterns
getDaemonprocs() {

case $# in
1)
        ## get the line with the pattern and without "grep"
        pids=`$PS auxwww |
             /bin/grep $1 |
             /usr/bin/awk '{
             if ($(NF-1) != "/bin/grep") print $2
             }' ORS=' '`
        ;;
2)
        ## get the line with the pattern and ending with the 2nd pattern
        pids=`$PS auxwww |
             /bin/grep $1 |
             /usr/bin/awk '{
             if ($(NF-2) == CMD) print $2
             }' ORS=' ' CMD=$2`
        ;;
*)
        return 1
        ;;
esac

        if [ "$pids" != "" ]
        then
             echo $pids
             return 0
        fi
        return 1
}

case $1 in
'start')

    if [ -r $QBDIR/agent/Agent.json ]; then
        AGENT_CFG=$QBDIR/agent/Agent.json
    elif [ -r $QBDIR/agent/Master.json ]; then
        AGENT_CFG=$QBDIR/agent/Master.json
    else
        echo "Configuration file is not found"
        exit 1
    fi

    if [ "$AGENT_CFG" != "" ]; then
        AGENT_PIDS=`getDaemonprocs D${ID} $DAEMON`

        ## gracefully shutdown the MonitorAgent first
        test "$AGENT_PIDS" != "" && /bin/kill $AGENT_PIDS

        cd $QBDIR/bin
        myid=`/usr/bin/id $OWNER | /bin/awk '{print $1}'`
        yourid=`/usr/bin/id | /bin/awk '{print $1}'`
        if [ "$yourid" = "$myid" ]
        then
            $JAVA -D${ID} -Dfile.encoding=UTF8 -DLoggerName=MonitorAgent ${JAVA_OPTS} $DAEMON -I $AGENT_CFG >> $LOGDIR/MonitorAgent.out 2>&1 &
        else
            echo "It can only be started by the owner: $OWNER"
            exit 1
        fi
    fi
    ;;

'stop')

    AGENT_PIDS=`getDaemonprocs D${ID} $DAEMON`

    ## gracefully shutdown the MonitorAgent first
    test "$AGENT_PIDS" != "" && /bin/kill $AGENT_PIDS

    for retry in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    do
        AGENT_PIDS=`getDaemonprocs D${ID} $DAEMON`
        test "$AGENT_PIDS" = "" && break 
        /bin/sleep 3
    done

    AGENT_PIDS=`getDaemonprocs D${ID} $DAEMON`

    ## confirm the shutdown is successful
    if [ "$AGENT_PIDS" != "" ]
    then
         /bin/kill $AGENT_PIDS

         /bin/sleep 3
         AGENT_PIDS=`getDaemonprocs D${ID} $DAEMON`

         ## kill all the hanging processes forcefully
         test "$AGENT_PIDS" != "" && /bin/kill -9 $AGENT_PIDS
    fi
    ;;

'restart')
    $0 stop
    /bin/sleep 2
    $0 start
    ;;

'status')
    AGENT_PIDS=`getDaemonprocs D${ID} $DAEMON`
    if [ "$AGENT_PIDS" != "" ]
    then
        echo "${ID} (pid $AGENT_PIDS) is running..."
    else
        echo "${ID} is stopped"
    fi
    ;;

'query'|'disable'|'enable')
    exec 2>&1
    exec 1>/dev/null
    $JAVA $DAEMON -I $QBDIR/agent/Agent.json -A $1 -C $2 -N $3
    ;;

'shutdown')
    $JAVA $DAEMON -I $QBDIR/agent/Agent.json -A stop -C $2 -N $3
    ;;

'show')
    cd $QBDIR/bin
    $JAVA $DAEMON -I $QBDIR/agent/Agent.json -l
    ;;

*'.json')
    $JAVA org.qbroker.json.JSON2Map -a parse -f $1
    ;;

*)
    echo "usage: $0 {start|stop|restart|status|show|shutdown|query}"
    ;;
esac
